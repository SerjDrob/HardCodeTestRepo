// <auto-generated />
using System;
using HardCodeTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HardCodeTest.Migrations
{
    [DbContext(typeof(HardCodeDbContext))]
    partial class HardCodeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HardCodeData.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HardCodeData.Models.MiscField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("MiscFields");
                });

            modelBuilder.Entity("HardCodeData.Models.MiscFieldValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FieldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MiscFieldId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MiscFieldId");

                    b.HasIndex("ProductId");

                    b.ToTable("MiscFieldValue");
                });

            modelBuilder.Entity("HardCodeData.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("HardCodeData.Models.MiscField", b =>
                {
                    b.HasOne("HardCodeData.Models.Category", null)
                        .WithMany("MiscFields")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HardCodeData.Models.MiscFieldValue", b =>
                {
                    b.HasOne("HardCodeData.Models.MiscField", "MiscField")
                        .WithMany("MiscFieldValues")
                        .HasForeignKey("MiscFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HardCodeData.Models.Product", "Product")
                        .WithMany("MiscFieldValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MiscField");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HardCodeData.Models.Product", b =>
                {
                    b.HasOne("HardCodeData.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HardCodeData.Models.Category", b =>
                {
                    b.Navigation("MiscFields");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("HardCodeData.Models.MiscField", b =>
                {
                    b.Navigation("MiscFieldValues");
                });

            modelBuilder.Entity("HardCodeData.Models.Product", b =>
                {
                    b.Navigation("MiscFieldValues");
                });
#pragma warning restore 612, 618
        }
    }
}
